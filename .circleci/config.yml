# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1
jobs:
  jvm:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:openjdk-11-lein-2.9.3-buster
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.10.1.763.sh
            chmod +x linux-install-1.10.1.763.sh
            sudo ./linux-install-1.10.1.763.sh
      - run:
          name: Run JVM tests
          command: |
            script/test/jvm
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
  node:
    docker:
      # specify the version you desire here
      - image: cimg/clojure:1.12.0-openjdk-17.0-node
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.10.1.763.sh
            chmod +x linux-install-1.10.1.763.sh
            sudo ./linux-install-1.10.1.763.sh
      - run:
          name: Run Node tests
          command: |
            script/test/node
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
  planck:
    macos:
      xcode: "14.0.0"
    steps:
      - checkout
      - restore_cache:
          keys:
            - mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Install planck
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install planck
          no_output_timeout: 30m
      - run:
          name: Run Planck tests
          command: |
            echo $PWD
            plk -A:test -K -m sci.test-runner
      - save_cache:
          paths:
            - /Users/distiller/.m2
            - /Users/distiller/project/.planck_cache
          key: mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  linux:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.3-buster
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
#      SCI_TEST_ENV: native
    steps:
      - checkout
      - restore_cache:
          keys:
            - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get --allow-releaseinfo-change update
            sudo apt-get -y install build-essential zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-22.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Native tests
          command: |
            script/test/native
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.3.0
          key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  mac:
    macos:
      xcode: "14.0.0"
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      JAVA_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      SCI_TEST_ENV: native
    steps:
      - checkout
      - restore_cache:
          keys:
            - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Install Leiningen
          command: |
            .circleci/script/install-leiningen
      - run:
          name: Download GraalVM
          command: |
            cd ~
            ls -la
            if ! [ -d graalvm-ce-java11-22.3.0 ]; then
              curl -O -sL curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
              tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            export PATH=$GRAALVM_HOME/bin:$PATH
            script/test/native
      - save_cache:
          paths:
            - ~/.m2
              - ~/graalvm-ce-java11-22.3.0
          key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  deploy:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.3-buster
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: .circleci/script/deploy
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
  # docker:
  #   docker:
  #     - image: circleci/buildpack-deps:stretch
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - run:
  #         name: Build Docker image
  #         command: .circleci/script/docker

workflows:
  version: 2
  ci:
    jobs:
      - jvm
      - node
#      - planck
      - linux
#      - mac
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - jvm
            - node
            - linux
#            - mac
      # - docker:
      #     filters:
      #       branches:
      #         only: master
      #     requires:
      #       - jvm
      #       - linux
      #       - mac
